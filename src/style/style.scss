@use "controller";
@use "state";

iframe {
  border-style: none;
}
:root,
html,
body {
  margin: 0;
  height: 100%;
}
body {
  display: flex;
  flex-direction: column;
  background-color: #222;
  color: white;
}

.starter {
  width: 100%;
  height: 100%;
}
.game {
  * {
    all: unset;
  }

  --over-wait: 3000;
  --offset: 0;
  --delay: 0;
  --duration: 1000;
  --judge-line-y: 0.96;

  position: relative;
  width: 100%;
  height: 100%;
}

.source,
.player,
.controller,
.in-game-menu,
.action-detector,
.result {
  position: absolute;
  width: 100%;
  height: 100%;
}

.game + .game-select-menu {
  display: none;
}
.game-select-menu {
  position: absolute;
  right: 0;
  padding: 1em;

  .game-selector {
    font-size: 150%;
    height: 2em;
  }
}
.player {
  -webkit-user-select: none;
  user-select: none;
}
.result {
  background: rgba(#333, 0.6);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  .judge-count {
    display: grid;
    justify-content: center;
    align-content: center;
    column-gap: 1.2em;
    .judge {
      grid-column: 1;
    }
    .count {
      grid-column: 2;
    }
  }
}

.progress {
  position: absolute;
  width: 100%;
  height: 1px;
  bottom: 0;
  background-color: white;

  @keyframes progress {
    from {
      width: 100%;
    }
    to {
      width: 0%;
    }
  }
  animation-play-state: paused;
  @include state.playing {
    animation-play-state: running;
  }
  animation-name: progress;
  @include state.restarting {
    animation: none;
  }
  animation-duration: calc((var(--duration) + var(--over-wait)) * 1ms);
  animation-timing-function: linear;
  animation-fill-mode: forwards;
}
.view {
  position: absolute;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  perspective: 10vmin;
  perspective-origin: top;
}
.lanes {
  position: absolute;
  width: 100%;
  height: 100%;
  transform: rotateX(45deg);
  transform-origin: bottom;
  overflow: hidden;
  background: rgba($color: #000000, $alpha: 0.2);
  display: grid;
  grid-template-columns: repeat(var(--lane-amount), auto);
}
.judge-line {
  position: absolute;
  top: calc(100% * var(--judge-line-y));
  width: 100%;
  height: 0%;
  border-style: solid;
  border-width: 0;
  border-bottom-width: 1px;
  background: rgba($color: red, $alpha: 0.2);
}
.judge-view {
  pointer-events: none;
  position: absolute;
  background: rgba($color: #000000, $alpha: 0.4);
  font-size: 5em;
  font-weight: 600;
}
.lane {
  position: relative;
  width: 100%;
  height: 100%;
  &.action {
    background: rgba($color: #ffffff, $alpha: 0.2);
  }
}

@keyframes fall {
  from {
    top: 0%;
    transform: translateY(0);
  }
  to {
    top: 100%;
    transform: translateY(0);
  }
}
.note {
  animation-play-state: paused;
  @include state.playing {
    animation-play-state: running;
  }
  animation-name: fall;
  @include state.restarting {
    animation: none;
  }

  animation-delay: calc(
    calc(var(--offset) + var(--delay) - var(--duration) * var(--judge-line-y)) *
      1ms
  );
  animation-duration: calc(var(--duration) * 1ms);
  animation-timing-function: linear;
  animation-fill-mode: forwards;

  transform: translateY(-100%);
  grid-column: calc(1 + var(--position));
  grid-row: 1;
  position: relative;
  width: 100%;
  height: 100%;

  display: flex;
  flex-direction: column;
  &:not([data-judge=""]) {
    pointer-events: none;
    opacity: 0;
  }

  --judge-shrink: calc(var(--duration) / 1000);
  .judge {
    --judge-ms: 40;
    width: 100%;
    height: calc(var(--judge-ms) / (10 * var(--judge-shrink)) * 1%);
  }
  .perfect {
    --judge-ms: 20;
    width: 100%;
    height: calc(var(--judge-ms) / (10 * var(--judge-shrink)) * 1%);
    background-color: orange;
  }
}
